import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.spotbugs' version '4.5.0'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group 'fordlabs'
version '1.0-SNAPSHOT'

sourceCompatibility = 12

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    from ('./src/main/java') {
        include 'META-INF/spring.factories'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed", TestLogEvent.STANDARD_ERROR
        showStackTraces true
        showCauses true
        showExceptions true
        exceptionFormat TestExceptionFormat.FULL
    }
}

// More spotbugs properties can be found here -> https://spotbugs-gradle-plugin.netlify.app/com/github/spotbugs/snom/spotbugsextension
// Bug descriptions -> https://spotbugs.readthedocs.io/en/latest/bugDescriptions.html
tasks.matching { it.name.startsWith("spotbugs") }.each {
    it.reports {
        text.enabled = true
    }
}

task('spotbugsReportMain') {
    doLast {
        if (spotbugsMain.state.failure != null) {
            println()
            file("build/reports/spotbugs/main.txt").readLines().forEach {
                println(it)
            }
        }
    }
}

task('spotbugsReportTest') {
    doLast {
        if(spotbugsTest.state.failure != null) {
            println()
            file("build/reports/spotbugs/test.txt").readLines().forEach {
                println( it )
            }
        }
    }
}
tasks.getByPath("spotbugsMain").finalizedBy(spotbugsReportMain)
tasks.getByPath("spotbugsTest").finalizedBy(spotbugsReportTest)

dependencies {
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter'

    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    testImplementation 'org.assertj:assertj-core:3.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.thymeleaf:thymeleaf-testing:3.0.4.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}
